#include "pch.h"
#include <iostream>
#include <fstream>
#include <string>
#include <iomanip>

using namespace std;
void startup();
void writing2();
void deleting2();
void searching2();
void display2();
void writing3();
void deleting3();
void searching3();
void display3();
void display33();
void display22();


class worker {

public:
	double paywage = 0;
	string name;

	void SetPassword(float x)
	{
		password = x;
	}
	int GetPassword()
	{
		return password;
	}

private:
	int password = 0;

};

class paystub {

public:
	string name;
	double monday = 0;
	double tuesday = 0;
	double wednesday = 0;
	double thursday = 0;
	double friday = 0;

};
int main()
{

	int title = 0;
	cout << "Worker or Superviser:" << endl << "Press 1 for Employee Login" << endl << "Press 2 for Supervisor Login" << endl;
	cin >> title;
	if (title == 1)
	{
		searching2();
		cout << "Welcome! What would you like to do today:" << endl;
		while (true) {
			int opt;
			cout << "Please Enter an option in the range 1-5 number to continue or any other key to exit:\n ";
			cout << "\nPress 1 to Insert Weekly Hours";
			cout << "\nPress 2 for Updating Hours";
			cout << "\nPress 3 for Viewing PayStub";
			cout << "\nPress 4 for Changing Password";
			cout << "\nPress 5 to Close the Program";
			cout << "\nEnter option Number: ";
			cin >> opt;

			switch (opt)
			{
			case 1:
			{
				writing3();
				break;
			}
			case 2:
			{
				deleting3();
				writing3();
				cout << setw(30) << "" << "Hours have been updated!\n";
				break;
			}
			case 3:
			{
				display33();
				break;
			}
			case 4:
			{
				display22();
				break;
			}
			case 5:
			{
				system("pause");
				exit(1);
				break;

			default:
				exit(1);
			}

			cout << "--------------------------" << endl;
			}
		}
	}
	if (title == 2)
	{
		startup();
		cout << "Welcome Superviser, what would you like to do today." << endl;
		while (true) {
			int opt;
			cout << "Please Enter an option in the range 1-5 number to continue or any other key to exit:\n ";
			cout << "\nPress 1 for New Employee insertion";
			cout << "\nPress 2 for Remove Employee";
			cout << "\nPress 3 for Updating a Record";
			cout << "\nPress 4 for Displaying All Records";
			cout << "\nPress 5 to Exit the Program";
			cout << "\nEnter option Number: ";
			cin >> opt;

			switch (opt)
			{
			case 1:
			{
				writing2();
				break;
			}
			case 2:
			{
				deleting2();
				break;
			}
			case 3:
			{
				deleting2();
				writing2();
				cout << setw(30) << "" << "Employee Record has been updated!\n";
				break;
			}
			case 4:
			{
				display2();
				break;
			}
			case 5:
			{
				system("pause");
				exit(1);
				break;


			default:
				exit(1);
			}

			cout << "--------------------------" << endl;
			}
		}
	}
}


void writing2() {

	float a;
	string line;
	bool found = false;
	worker workerinfo;
	cout << "Please enter first name of Worker (This cannot have whitespaces): ";
	cin >> workerinfo.name;
	cout << "Please enter the pay wage of Worker (This can be only numbers and a dot): ";
	cin >> workerinfo.paywage;
	cout << "Pleae enter the password of Worker (This can be only numbers): ";
	cin >> a;
	workerinfo.SetPassword(a);
	ifstream mycurrentfile;
	mycurrentfile.open("workrecord.txt");


	for (unsigned int curLine = 0; getline(mycurrentfile, line); curLine++)
	{
		if (line.find(workerinfo.name) != string::npos)
		{
			found = true;
			cout << setw(30) << "" << "User found " << workerinfo.name << " on line: " << curLine << "" << endl;
			cout << setw(30) << "" << "Please enter different name!" << endl;
		}

	}
	mycurrentfile.close();
	
	if (!found) {
		ofstream myfile;
		myfile.open("workrecord.txt", ios::app | ios::out);
		myfile << endl << workerinfo.name << endl;
		myfile << workerinfo.paywage << endl;
		myfile << workerinfo.GetPassword();
		myfile.close();
		cout << setw(30) << "" << "Worker record has been added" << endl;
	}

}

void writing3() {

	float a;
	string line;
	bool found = false;
	paystub weeklyhours;
	cout << "Please enter Employee name:";
	cin >> weeklyhours.name;
	cout << "Please enter hours worked Monday (This cannot have whitespaces): ";
	cin >> weeklyhours.monday;
	cout << "Please enter hours worked Tuesday (This cannot have whitespaces): ";
	cin >> weeklyhours.tuesday;
	cout << "Please enter hours worked Wednesday (This cannot have whitespaces): ";
	cin >> weeklyhours.wednesday;
	cout << "Please enter hours worked Thursday (This cannot have whitespaces): ";
	cin >> weeklyhours.thursday;
	cout << "Please enter hours worked Friday (This cannot have whitespaces): ";
	cin >> weeklyhours.friday;
	ifstream mycurrentfile;
	mycurrentfile.open("weeklyhours.txt");


	for (unsigned int curLine = 0; getline(mycurrentfile, line); curLine++)
	{
		if (line.find(weeklyhours.name) != string::npos)
		{
			found = true;
			cout << setw(30) << "" << "User found: " << weeklyhours.name << " on line: " << curLine << "" << endl;
			cout << setw(30) << "" << "Please enter different name" << endl;
		}

	}
	mycurrentfile.close();
	
	if (!found) {
		ofstream myfile;
		myfile.open("weeklyhours.txt", ios::app | ios::out);
		myfile << endl << weeklyhours.name << endl;
		myfile << weeklyhours.monday << endl;
		myfile << weeklyhours.tuesday << endl;
		myfile << weeklyhours.wednesday << endl;
		myfile << weeklyhours.thursday << endl;
		myfile << weeklyhours.friday << endl;
		myfile.close();
		cout << setw(30) << "" << "Workers hours has been added" << endl;
	}

}


void deleting2()
{

	string line, name;
	cout << "Please Enter the name of record you want to delete: ";
	cin >> name;
	ifstream myfile;
	ofstream temp;
	myfile.open("workrecord.txt");
	temp.open("temp.txt");
	int skip = 0;
	bool deleted = false;
	while (getline(myfile, line)) {
		if ((line != name) && !(skip > 0)) {
			temp << line << endl;
		}
		else {
			deleted = true;
			if (skip == 0) {
				skip = 2; // Skip the next two lines also
			}
			else {
				--skip;
			}
		}
	}
	if (deleted) {
		cout << setw(30) << "" << "Deleting \"" << name << "\" from the records..." << endl;
		cout << setw(30) << "" << "The record with the name " << name << " has been deleted" << endl;
	}
	else {
		cout << setw(30) << "" << "There was no \"" << name << "\" in the records..." << endl;

	}
	myfile.close();
	temp.close();
	remove("workrecord.txt");
	rename("temp.txt", "workrecord.txt");

}

void deleting3()
{

	string line, id;
	cout << "Please Enter Your Name: ";
	cin >> id;
	ifstream myfile;
	ofstream temp;
	myfile.open("weeklyhours.txt");
	temp.open("temp.txt");
	int skip = 0;
	bool deleted = false;
	while (getline(myfile, line)) {
		if ((line != id) && !(skip > 0)) {
			temp << line << endl;
		}
		else {
			deleted = true;
			if (skip == 0) {
				skip = 5; // Skip the next two lines also
			}
			else {
				--skip;
			}
		}
	}
	if (deleted) {
		cout << setw(30) << "" << "Deleting hours of \"" << id << "\" from the records..." << endl;
		cout << setw(30) << "" << "The hours for " << id << " has been deleted::..::" << endl;

	}
	else {
		cout << setw(30) << "" << "::..::There was no \"" << id << "\" in the records..." << endl;

	}
	myfile.close();
	temp.close();
	remove("weeklyhours.txt");
	rename("temp.txt", "workrecord.txt");

}


void searching2() {

	ifstream fileInput;
	fileInput.open("workrecord.txt");
	int locked = 0;
	string line, search;
	int x = 0;
	while (locked != 1 && x != 5)
	{
		cout << "Please enter the your Password: ";
		cin >> search;
		x++;
		bool found = false;
		//while (locked == 0)


		for (unsigned int curLine = 0; getline(fileInput, line); curLine++)
		{
			if (line.find(search) != string::npos)
			{
				found = true;
				cout << setw(30) << "" << "Unlocked " << " system\n" << endl;
				locked = 1;
				break;
			}

		}

		if (!found) {
			cout << setw(30) << "" << "Error! The password " << search << "is not a valid password" << endl;
		}
	}
	fileInput.close();
	if (x == 5) {

		cout << endl << endl;
		cout << "Too Many Attempts\n";
		cout << "Please re-open the program to try again" << endl;
		system("pause");
		exit(1);
	}
}


void searching3() {

	ifstream fileInput;
	fileInput.open("weeklyhours.txt");
	int locked = 0;
	string line, search;
	cout << "Please enter the your name: ";
	cin >> search;
	bool found = false;
	//while (locked == 0)
	{

		for (unsigned int curLine = 0; getline(fileInput, line); curLine++)
		{
			if (line.find(search) != string::npos)
			{
				found = true;
				cout << setw(30) << "" << "Unlocked " << " system" << endl;
				locked = 1;
				break;
			}

		}

		if (!found) {
			cout << setw(30) << "" << "Error! The password " << search << "is not a valid password" << endl;
		}
	}
	fileInput.close();

}


void display2() {

	ifstream fileInput;
	fileInput.open("workrecord.txt");
	if (fileInput.fail()) {
		cout << "!!!There is soemthing wrong with your file!!!" << endl;
	}
	string temp;

	while (fileInput >> temp) {
		cout << "Name: " << temp << endl;
		fileInput >> temp;
		cout << "Paywage: " << temp << endl;
		fileInput >> temp;
		cout << "Password: " << temp << endl;
	}

	fileInput.close();
}

void display3() {

	ifstream fileInput;
	fileInput.open("weeklyhours.txt");
	if (fileInput.fail()) {
		cout << "!!!There is soemthing wrong with your file!!!" << endl;
	}
	string temp;

	while (fileInput >> temp) {
		cout << "Name: " << temp << endl;
		fileInput >> temp;
		cout << "Monday Hours: " << temp << endl;
		fileInput >> temp;
		cout << "Tuesday Hours: " << temp << endl;
		fileInput >> temp;
		cout << "Wednesday Hours: " << temp << endl;
		fileInput >> temp;
		cout << "Thursday Hours: " << temp << endl;
		fileInput >> temp;
		cout << "Friday Hours: " << temp << endl;
	}

	fileInput.close();
}
void startup()
{
	int pinID = 7131999, locked = 0, pininput;
	int x = 0;
	while (locked != 1 && x != 5)
	{
		cout << "Enter Worker ID or Supervisor ID pin:";
		cin >> pininput;
		x++;
		if (pininput == pinID)
			locked = 1;
		else
			cout << "Incorrect Password" << endl;
	}
	if (x == 5) {
		cout << endl << endl;
		cout << "Too Many Attempts\n";
		cout << "Please re-open the program to try again" << endl;
		system("pause");
		exit(1);
	}
}
void display33() {

	ifstream fileInput;
	fileInput.open("weeklyhours.txt");
	if (fileInput.fail()) {
		cout << "!!!There is soemthing wrong with your file!!!" << endl;
	}
	string temp;
	int num_lines = 0;
	string line, search;
	cout << "Please enter the name to search hours: ";
	cin >> search;
	bool found = false;
	for (unsigned int curLine = 0; getline(fileInput, line); curLine++)
	{
		if (line.find(search) != string::npos)
		{
			found = true;
			cout << setw(30) << "" << "found: " << search << " on line: " << curLine << endl;
			fileInput >> temp;
			while (getline(fileInput, line))
			{
				cout << "ID: " << search << endl;

				cout << "Monday Hours: " << temp << endl;
				fileInput >> temp;
				cout << "Tuesday Hours: " << temp << endl;
				fileInput >> temp;
				cout << "Wednesday Hours: " << temp << endl;
				fileInput >> temp;
				cout << "Thursday Hours: " << temp << endl;
				fileInput >> temp;
				cout << "Friday Hours: " << temp << endl;
				break;
			}
		}
	}
	if (!found) {
		cout << setw(30) << "" << "" << search << "'s Hours were not found! Press 1 to insert hours" << endl;
	}


	fileInput.close();
}

void display22()
{
	worker workerinfo;
	string line, name, password, paywage;
	float newPassword;
	int fullsend = 0;
	cout << "Please Enter the name of record you want to change password for: ";
	cin >> name;
	cout << "Please Enter New Passsword for " << name << ":";
	cin >> newPassword;
	ifstream fileInput;
	ofstream tempfile;
	fileInput.open("workrecord.txt");
	tempfile.open("temp.txt");
	if (fileInput.fail())
	{
		cout << "!!!There is soemthing wrong with your file!!!" << endl;
	}
	int skip = 0;
	bool found = false;
	bool deleted = false;
	for (unsigned int curLine = 0; getline(fileInput, line); curLine++)
	{
		if (line.find(password) != string::npos)
		{
			found = true;
			cout << setw(30) << "" << "Password Accepted" << endl;
			break;
		}

	}

	if (!found) {
		cout << setw(30) << "" << "Error! The password " << password << "is not a valid password." << endl;

	}
	fileInput.close();
	fileInput.open("workrecord.txt");
	while (getline(fileInput, line)) {
		if ((line != name) && !(skip > 0)) {
			tempfile << line << endl;
		}
		else {
			deleted = true;
			if (skip == 0) {
				fileInput >> paywage;
				skip = 2;
			}
			else {
				--skip;
			}
		}
	}
	if (deleted)
	{
		cout << setw(30) << "" << "Deleting Current Password for\"" << name << "\" from the records..." << endl;
		cout << setw(30) << "" << "The password for " << name << " has been updated" << endl;
	}
	else
	{
		cout << setw(30) << "" << "There was no \"" << name << "\" in the records..." << endl;
	}
	string temp;

	fileInput.close();
	tempfile.close();

	ofstream myfile;
	myfile.open("temp.txt", ios::app | ios::out);
	workerinfo.SetPassword(newPassword);
	myfile << name << endl;
	myfile << paywage << endl;
	myfile << workerinfo.GetPassword();
	myfile.close();
	cout << setw(30) << "" << "Worker record has been added" << endl;
	remove("workrecord.txt");
	rename("temp.txt", "workrecord.txt");
}
